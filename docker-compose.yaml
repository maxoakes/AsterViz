version: '3'
services:
  backend:
    container_name: backend
    build: ./backend/
    restart: always
    ports:
      - "8080:8080"
    environment:
      - VITE_DB_HOST=postgres
      - VITE_IP_ADDR=0.0.0.0
      - VITE_PORT=8080
      - VITE_LOGS_DIR=logs/
      - VITE_DB_PORT=5432
      - VITE_DB_USER=asterviz
      - VITE_DB_PASS=asterviz
      - VITE_DB_NAME=asterviz
      - VITE_ADMIN_PASSWORD=adminpw
      - VITE_JWT_SECRET=superSecret
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432" 
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=asterviz
      - POSTGRES_PASSWORD=asterviz
      - POSTGRES_DB=asterviz

  minio:
    container_name: minio
    image: docker.io/bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_DEFAULT_BUCKETS=asterviz:public
      - MINIO_ROOT_USER=minioUser
      - MINIO_ROOT_PASSWORD=minioPass
      - MINIO_SERVER_ACCESS_KEY=minioUser
      - MINIO_SERVER_SECRET_KEY=minioPass
    volumes:
      - minio_data:/data

  frontend:
    container_name: frontend
    build: ./frontend/
    restart: always
    ports:
      - "88:80" # We need to map here for convenience, so we don't conflict with a potential possible local server
    environment:
      - VITE_BACKEND_IP=backend
      - VITE_BACKEND_PORT=8080

  # auth_rs:
  #   container_name: auth_rs
  #   build: ./auth_rs/
  #   restart: always
  #   ports:
  #     - "3333:3333"
  #   environment:
  #     - DATABASE_URL=postgres://asterviz:asterviz@postgres/asterviz
  #     - AUTH_SECRET=superSecret
  #   depends_on: #This is a lie
  #     - postgres

volumes:
  minio_data:
    driver: local
  db:
    driver: local